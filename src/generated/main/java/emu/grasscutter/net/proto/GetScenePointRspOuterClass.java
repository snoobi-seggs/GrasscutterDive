// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetScenePointRsp.proto

package emu.grasscutter.net.proto;

public final class GetScenePointRspOuterClass {
  private GetScenePointRspOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GetScenePointRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetScenePointRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 unlocked_point_list = 1;</code>
     * @return A list containing the unlockedPointList.
     */
    java.util.List<java.lang.Integer> getUnlockedPointListList();
    /**
     * <code>repeated uint32 unlocked_point_list = 1;</code>
     * @return The count of unlockedPointList.
     */
    int getUnlockedPointListCount();
    /**
     * <code>repeated uint32 unlocked_point_list = 1;</code>
     * @param index The index of the element to return.
     * @return The unlockedPointList at the given index.
     */
    int getUnlockedPointList(int index);

    /**
     * <code>repeated uint32 unhide_point_list = 6;</code>
     * @return A list containing the unhidePointList.
     */
    java.util.List<java.lang.Integer> getUnhidePointListList();
    /**
     * <code>repeated uint32 unhide_point_list = 6;</code>
     * @return The count of unhidePointList.
     */
    int getUnhidePointListCount();
    /**
     * <code>repeated uint32 unhide_point_list = 6;</code>
     * @param index The index of the element to return.
     * @return The unhidePointList at the given index.
     */
    int getUnhidePointList(int index);

    /**
     * <code>bool FBFJPEPMAOF = 9;</code>
     * @return The fBFJPEPMAOF.
     */
    boolean getFBFJPEPMAOF();

    /**
     * <code>int32 retcode = 11;</code>
     * @return The retcode.
     */
    int getRetcode();

    /**
     * <pre>
     *GILIFDOOHFF
     * </pre>
     *
     * <code>repeated uint32 unlock_area_list = 12;</code>
     * @return A list containing the unlockAreaList.
     */
    java.util.List<java.lang.Integer> getUnlockAreaListList();
    /**
     * <pre>
     *GILIFDOOHFF
     * </pre>
     *
     * <code>repeated uint32 unlock_area_list = 12;</code>
     * @return The count of unlockAreaList.
     */
    int getUnlockAreaListCount();
    /**
     * <pre>
     *GILIFDOOHFF
     * </pre>
     *
     * <code>repeated uint32 unlock_area_list = 12;</code>
     * @param index The index of the element to return.
     * @return The unlockAreaList at the given index.
     */
    int getUnlockAreaList(int index);

    /**
     * <pre>
     *PPDDIADEDIC
     * </pre>
     *
     * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
     * @return A list containing the notInteractDungeonEntryList.
     */
    java.util.List<java.lang.Integer> getNotInteractDungeonEntryListList();
    /**
     * <pre>
     *PPDDIADEDIC
     * </pre>
     *
     * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
     * @return The count of notInteractDungeonEntryList.
     */
    int getNotInteractDungeonEntryListCount();
    /**
     * <pre>
     *PPDDIADEDIC
     * </pre>
     *
     * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
     * @param index The index of the element to return.
     * @return The notInteractDungeonEntryList at the given index.
     */
    int getNotInteractDungeonEntryList(int index);

    /**
     * <pre>
     *OGKCOCBLNLF
     * </pre>
     *
     * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
     * @return A list containing the notExploredDungeonEntryList.
     */
    java.util.List<java.lang.Integer> getNotExploredDungeonEntryListList();
    /**
     * <pre>
     *OGKCOCBLNLF
     * </pre>
     *
     * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
     * @return The count of notExploredDungeonEntryList.
     */
    int getNotExploredDungeonEntryListCount();
    /**
     * <pre>
     *OGKCOCBLNLF
     * </pre>
     *
     * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
     * @param index The index of the element to return.
     * @return The notExploredDungeonEntryList at the given index.
     */
    int getNotExploredDungeonEntryList(int index);

    /**
     * <pre>
     *EBIFELCKPEA
     * </pre>
     *
     * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
     * @return A list containing the toBeExploredDungeonEntryList.
     */
    java.util.List<java.lang.Integer> getToBeExploredDungeonEntryListList();
    /**
     * <pre>
     *EBIFELCKPEA
     * </pre>
     *
     * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
     * @return The count of toBeExploredDungeonEntryList.
     */
    int getToBeExploredDungeonEntryListCount();
    /**
     * <pre>
     *EBIFELCKPEA
     * </pre>
     *
     * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
     * @param index The index of the element to return.
     * @return The toBeExploredDungeonEntryList at the given index.
     */
    int getToBeExploredDungeonEntryList(int index);

    /**
     * <pre>
     *JJOHJDFINFN
     * </pre>
     *
     * <code>repeated uint32 group_unlimit_point_list = 4;</code>
     * @return A list containing the groupUnlimitPointList.
     */
    java.util.List<java.lang.Integer> getGroupUnlimitPointListList();
    /**
     * <pre>
     *JJOHJDFINFN
     * </pre>
     *
     * <code>repeated uint32 group_unlimit_point_list = 4;</code>
     * @return The count of groupUnlimitPointList.
     */
    int getGroupUnlimitPointListCount();
    /**
     * <pre>
     *JJOHJDFINFN
     * </pre>
     *
     * <code>repeated uint32 group_unlimit_point_list = 4;</code>
     * @param index The index of the element to return.
     * @return The groupUnlimitPointList at the given index.
     */
    int getGroupUnlimitPointList(int index);

    /**
     * <code>uint32 belong_uid = 14;</code>
     * @return The belongUid.
     */
    int getBelongUid();

    /**
     * <pre>
     *JCLHNODLPOH correct
     * </pre>
     *
     * <code>repeated uint32 hide_point_list = 13;</code>
     * @return A list containing the hidePointList.
     */
    java.util.List<java.lang.Integer> getHidePointListList();
    /**
     * <pre>
     *JCLHNODLPOH correct
     * </pre>
     *
     * <code>repeated uint32 hide_point_list = 13;</code>
     * @return The count of hidePointList.
     */
    int getHidePointListCount();
    /**
     * <pre>
     *JCLHNODLPOH correct
     * </pre>
     *
     * <code>repeated uint32 hide_point_list = 13;</code>
     * @param index The index of the element to return.
     * @return The hidePointList at the given index.
     */
    int getHidePointList(int index);

    /**
     * <code>uint32 scene_id = 2;</code>
     * @return The sceneId.
     */
    int getSceneId();

    /**
     * <pre>
     *KOPAHGHMECF
     * </pre>
     *
     * <code>repeated uint32 KOPAHGHMECF = 3;</code>
     * @return A list containing the kOPAHGHMECF.
     */
    java.util.List<java.lang.Integer> getKOPAHGHMECFList();
    /**
     * <pre>
     *KOPAHGHMECF
     * </pre>
     *
     * <code>repeated uint32 KOPAHGHMECF = 3;</code>
     * @return The count of kOPAHGHMECF.
     */
    int getKOPAHGHMECFCount();
    /**
     * <pre>
     *KOPAHGHMECF
     * </pre>
     *
     * <code>repeated uint32 KOPAHGHMECF = 3;</code>
     * @param index The index of the element to return.
     * @return The kOPAHGHMECF at the given index.
     */
    int getKOPAHGHMECF(int index);
  }
  /**
   * <pre>
   * CmdId: 7133
   * Obf: PMONCPENJMK
   * </pre>
   *
   * Protobuf type {@code GetScenePointRsp}
   */
  public static final class GetScenePointRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetScenePointRsp)
      GetScenePointRspOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetScenePointRsp.newBuilder() to construct.
    private GetScenePointRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetScenePointRsp() {
      unlockedPointList_ = emptyIntList();
      unhidePointList_ = emptyIntList();
      unlockAreaList_ = emptyIntList();
      notInteractDungeonEntryList_ = emptyIntList();
      notExploredDungeonEntryList_ = emptyIntList();
      toBeExploredDungeonEntryList_ = emptyIntList();
      groupUnlimitPointList_ = emptyIntList();
      hidePointList_ = emptyIntList();
      kOPAHGHMECF_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetScenePointRsp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetScenePointRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                unlockedPointList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              unlockedPointList_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                unlockedPointList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                unlockedPointList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {

              sceneId_ = input.readUInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                kOPAHGHMECF_ = newIntList();
                mutable_bitField0_ |= 0x00000100;
              }
              kOPAHGHMECF_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) != 0) && input.getBytesUntilLimit() > 0) {
                kOPAHGHMECF_ = newIntList();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                kOPAHGHMECF_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                groupUnlimitPointList_ = newIntList();
                mutable_bitField0_ |= 0x00000040;
              }
              groupUnlimitPointList_.addInt(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                groupUnlimitPointList_ = newIntList();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                groupUnlimitPointList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                unhidePointList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              unhidePointList_.addInt(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                unhidePointList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                unhidePointList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                toBeExploredDungeonEntryList_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              toBeExploredDungeonEntryList_.addInt(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                toBeExploredDungeonEntryList_ = newIntList();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                toBeExploredDungeonEntryList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                notInteractDungeonEntryList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              notInteractDungeonEntryList_.addInt(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                notInteractDungeonEntryList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                notInteractDungeonEntryList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {

              fBFJPEPMAOF_ = input.readBool();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                notExploredDungeonEntryList_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              notExploredDungeonEntryList_.addInt(input.readUInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                notExploredDungeonEntryList_ = newIntList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                notExploredDungeonEntryList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {

              retcode_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                unlockAreaList_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              unlockAreaList_.addInt(input.readUInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                unlockAreaList_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                unlockAreaList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                hidePointList_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              hidePointList_.addInt(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                hidePointList_ = newIntList();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                hidePointList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {

              belongUid_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          unlockedPointList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          kOPAHGHMECF_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          groupUnlimitPointList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          unhidePointList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          toBeExploredDungeonEntryList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          notInteractDungeonEntryList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          notExploredDungeonEntryList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          unlockAreaList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          hidePointList_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.GetScenePointRspOuterClass.internal_static_GetScenePointRsp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.GetScenePointRspOuterClass.internal_static_GetScenePointRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp.class, emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp.Builder.class);
    }

    public static final int UNLOCKED_POINT_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList unlockedPointList_;
    /**
     * <code>repeated uint32 unlocked_point_list = 1;</code>
     * @return A list containing the unlockedPointList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getUnlockedPointListList() {
      return unlockedPointList_;
    }
    /**
     * <code>repeated uint32 unlocked_point_list = 1;</code>
     * @return The count of unlockedPointList.
     */
    public int getUnlockedPointListCount() {
      return unlockedPointList_.size();
    }
    /**
     * <code>repeated uint32 unlocked_point_list = 1;</code>
     * @param index The index of the element to return.
     * @return The unlockedPointList at the given index.
     */
    public int getUnlockedPointList(int index) {
      return unlockedPointList_.getInt(index);
    }
    private int unlockedPointListMemoizedSerializedSize = -1;

    public static final int UNHIDE_POINT_LIST_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.IntList unhidePointList_;
    /**
     * <code>repeated uint32 unhide_point_list = 6;</code>
     * @return A list containing the unhidePointList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getUnhidePointListList() {
      return unhidePointList_;
    }
    /**
     * <code>repeated uint32 unhide_point_list = 6;</code>
     * @return The count of unhidePointList.
     */
    public int getUnhidePointListCount() {
      return unhidePointList_.size();
    }
    /**
     * <code>repeated uint32 unhide_point_list = 6;</code>
     * @param index The index of the element to return.
     * @return The unhidePointList at the given index.
     */
    public int getUnhidePointList(int index) {
      return unhidePointList_.getInt(index);
    }
    private int unhidePointListMemoizedSerializedSize = -1;

    public static final int FBFJPEPMAOF_FIELD_NUMBER = 9;
    private boolean fBFJPEPMAOF_;
    /**
     * <code>bool FBFJPEPMAOF = 9;</code>
     * @return The fBFJPEPMAOF.
     */
    @java.lang.Override
    public boolean getFBFJPEPMAOF() {
      return fBFJPEPMAOF_;
    }

    public static final int RETCODE_FIELD_NUMBER = 11;
    private int retcode_;
    /**
     * <code>int32 retcode = 11;</code>
     * @return The retcode.
     */
    @java.lang.Override
    public int getRetcode() {
      return retcode_;
    }

    public static final int UNLOCK_AREA_LIST_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.IntList unlockAreaList_;
    /**
     * <pre>
     *GILIFDOOHFF
     * </pre>
     *
     * <code>repeated uint32 unlock_area_list = 12;</code>
     * @return A list containing the unlockAreaList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getUnlockAreaListList() {
      return unlockAreaList_;
    }
    /**
     * <pre>
     *GILIFDOOHFF
     * </pre>
     *
     * <code>repeated uint32 unlock_area_list = 12;</code>
     * @return The count of unlockAreaList.
     */
    public int getUnlockAreaListCount() {
      return unlockAreaList_.size();
    }
    /**
     * <pre>
     *GILIFDOOHFF
     * </pre>
     *
     * <code>repeated uint32 unlock_area_list = 12;</code>
     * @param index The index of the element to return.
     * @return The unlockAreaList at the given index.
     */
    public int getUnlockAreaList(int index) {
      return unlockAreaList_.getInt(index);
    }
    private int unlockAreaListMemoizedSerializedSize = -1;

    public static final int NOT_INTERACT_DUNGEON_ENTRY_LIST_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList notInteractDungeonEntryList_;
    /**
     * <pre>
     *PPDDIADEDIC
     * </pre>
     *
     * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
     * @return A list containing the notInteractDungeonEntryList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getNotInteractDungeonEntryListList() {
      return notInteractDungeonEntryList_;
    }
    /**
     * <pre>
     *PPDDIADEDIC
     * </pre>
     *
     * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
     * @return The count of notInteractDungeonEntryList.
     */
    public int getNotInteractDungeonEntryListCount() {
      return notInteractDungeonEntryList_.size();
    }
    /**
     * <pre>
     *PPDDIADEDIC
     * </pre>
     *
     * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
     * @param index The index of the element to return.
     * @return The notInteractDungeonEntryList at the given index.
     */
    public int getNotInteractDungeonEntryList(int index) {
      return notInteractDungeonEntryList_.getInt(index);
    }
    private int notInteractDungeonEntryListMemoizedSerializedSize = -1;

    public static final int NOT_EXPLORED_DUNGEON_ENTRY_LIST_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList notExploredDungeonEntryList_;
    /**
     * <pre>
     *OGKCOCBLNLF
     * </pre>
     *
     * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
     * @return A list containing the notExploredDungeonEntryList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getNotExploredDungeonEntryListList() {
      return notExploredDungeonEntryList_;
    }
    /**
     * <pre>
     *OGKCOCBLNLF
     * </pre>
     *
     * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
     * @return The count of notExploredDungeonEntryList.
     */
    public int getNotExploredDungeonEntryListCount() {
      return notExploredDungeonEntryList_.size();
    }
    /**
     * <pre>
     *OGKCOCBLNLF
     * </pre>
     *
     * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
     * @param index The index of the element to return.
     * @return The notExploredDungeonEntryList at the given index.
     */
    public int getNotExploredDungeonEntryList(int index) {
      return notExploredDungeonEntryList_.getInt(index);
    }
    private int notExploredDungeonEntryListMemoizedSerializedSize = -1;

    public static final int TO_BE_EXPLORED_DUNGEON_ENTRY_LIST_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.IntList toBeExploredDungeonEntryList_;
    /**
     * <pre>
     *EBIFELCKPEA
     * </pre>
     *
     * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
     * @return A list containing the toBeExploredDungeonEntryList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getToBeExploredDungeonEntryListList() {
      return toBeExploredDungeonEntryList_;
    }
    /**
     * <pre>
     *EBIFELCKPEA
     * </pre>
     *
     * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
     * @return The count of toBeExploredDungeonEntryList.
     */
    public int getToBeExploredDungeonEntryListCount() {
      return toBeExploredDungeonEntryList_.size();
    }
    /**
     * <pre>
     *EBIFELCKPEA
     * </pre>
     *
     * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
     * @param index The index of the element to return.
     * @return The toBeExploredDungeonEntryList at the given index.
     */
    public int getToBeExploredDungeonEntryList(int index) {
      return toBeExploredDungeonEntryList_.getInt(index);
    }
    private int toBeExploredDungeonEntryListMemoizedSerializedSize = -1;

    public static final int GROUP_UNLIMIT_POINT_LIST_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList groupUnlimitPointList_;
    /**
     * <pre>
     *JJOHJDFINFN
     * </pre>
     *
     * <code>repeated uint32 group_unlimit_point_list = 4;</code>
     * @return A list containing the groupUnlimitPointList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getGroupUnlimitPointListList() {
      return groupUnlimitPointList_;
    }
    /**
     * <pre>
     *JJOHJDFINFN
     * </pre>
     *
     * <code>repeated uint32 group_unlimit_point_list = 4;</code>
     * @return The count of groupUnlimitPointList.
     */
    public int getGroupUnlimitPointListCount() {
      return groupUnlimitPointList_.size();
    }
    /**
     * <pre>
     *JJOHJDFINFN
     * </pre>
     *
     * <code>repeated uint32 group_unlimit_point_list = 4;</code>
     * @param index The index of the element to return.
     * @return The groupUnlimitPointList at the given index.
     */
    public int getGroupUnlimitPointList(int index) {
      return groupUnlimitPointList_.getInt(index);
    }
    private int groupUnlimitPointListMemoizedSerializedSize = -1;

    public static final int BELONG_UID_FIELD_NUMBER = 14;
    private int belongUid_;
    /**
     * <code>uint32 belong_uid = 14;</code>
     * @return The belongUid.
     */
    @java.lang.Override
    public int getBelongUid() {
      return belongUid_;
    }

    public static final int HIDE_POINT_LIST_FIELD_NUMBER = 13;
    private com.google.protobuf.Internal.IntList hidePointList_;
    /**
     * <pre>
     *JCLHNODLPOH correct
     * </pre>
     *
     * <code>repeated uint32 hide_point_list = 13;</code>
     * @return A list containing the hidePointList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHidePointListList() {
      return hidePointList_;
    }
    /**
     * <pre>
     *JCLHNODLPOH correct
     * </pre>
     *
     * <code>repeated uint32 hide_point_list = 13;</code>
     * @return The count of hidePointList.
     */
    public int getHidePointListCount() {
      return hidePointList_.size();
    }
    /**
     * <pre>
     *JCLHNODLPOH correct
     * </pre>
     *
     * <code>repeated uint32 hide_point_list = 13;</code>
     * @param index The index of the element to return.
     * @return The hidePointList at the given index.
     */
    public int getHidePointList(int index) {
      return hidePointList_.getInt(index);
    }
    private int hidePointListMemoizedSerializedSize = -1;

    public static final int SCENE_ID_FIELD_NUMBER = 2;
    private int sceneId_;
    /**
     * <code>uint32 scene_id = 2;</code>
     * @return The sceneId.
     */
    @java.lang.Override
    public int getSceneId() {
      return sceneId_;
    }

    public static final int KOPAHGHMECF_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList kOPAHGHMECF_;
    /**
     * <pre>
     *KOPAHGHMECF
     * </pre>
     *
     * <code>repeated uint32 KOPAHGHMECF = 3;</code>
     * @return A list containing the kOPAHGHMECF.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKOPAHGHMECFList() {
      return kOPAHGHMECF_;
    }
    /**
     * <pre>
     *KOPAHGHMECF
     * </pre>
     *
     * <code>repeated uint32 KOPAHGHMECF = 3;</code>
     * @return The count of kOPAHGHMECF.
     */
    public int getKOPAHGHMECFCount() {
      return kOPAHGHMECF_.size();
    }
    /**
     * <pre>
     *KOPAHGHMECF
     * </pre>
     *
     * <code>repeated uint32 KOPAHGHMECF = 3;</code>
     * @param index The index of the element to return.
     * @return The kOPAHGHMECF at the given index.
     */
    public int getKOPAHGHMECF(int index) {
      return kOPAHGHMECF_.getInt(index);
    }
    private int kOPAHGHMECFMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getUnlockedPointListList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(unlockedPointListMemoizedSerializedSize);
      }
      for (int i = 0; i < unlockedPointList_.size(); i++) {
        output.writeUInt32NoTag(unlockedPointList_.getInt(i));
      }
      if (sceneId_ != 0) {
        output.writeUInt32(2, sceneId_);
      }
      if (getKOPAHGHMECFList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(kOPAHGHMECFMemoizedSerializedSize);
      }
      for (int i = 0; i < kOPAHGHMECF_.size(); i++) {
        output.writeUInt32NoTag(kOPAHGHMECF_.getInt(i));
      }
      if (getGroupUnlimitPointListList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(groupUnlimitPointListMemoizedSerializedSize);
      }
      for (int i = 0; i < groupUnlimitPointList_.size(); i++) {
        output.writeUInt32NoTag(groupUnlimitPointList_.getInt(i));
      }
      if (getUnhidePointListList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(unhidePointListMemoizedSerializedSize);
      }
      for (int i = 0; i < unhidePointList_.size(); i++) {
        output.writeUInt32NoTag(unhidePointList_.getInt(i));
      }
      if (getToBeExploredDungeonEntryListList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(toBeExploredDungeonEntryListMemoizedSerializedSize);
      }
      for (int i = 0; i < toBeExploredDungeonEntryList_.size(); i++) {
        output.writeUInt32NoTag(toBeExploredDungeonEntryList_.getInt(i));
      }
      if (getNotInteractDungeonEntryListList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(notInteractDungeonEntryListMemoizedSerializedSize);
      }
      for (int i = 0; i < notInteractDungeonEntryList_.size(); i++) {
        output.writeUInt32NoTag(notInteractDungeonEntryList_.getInt(i));
      }
      if (fBFJPEPMAOF_ != false) {
        output.writeBool(9, fBFJPEPMAOF_);
      }
      if (getNotExploredDungeonEntryListList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(notExploredDungeonEntryListMemoizedSerializedSize);
      }
      for (int i = 0; i < notExploredDungeonEntryList_.size(); i++) {
        output.writeUInt32NoTag(notExploredDungeonEntryList_.getInt(i));
      }
      if (retcode_ != 0) {
        output.writeInt32(11, retcode_);
      }
      if (getUnlockAreaListList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(unlockAreaListMemoizedSerializedSize);
      }
      for (int i = 0; i < unlockAreaList_.size(); i++) {
        output.writeUInt32NoTag(unlockAreaList_.getInt(i));
      }
      if (getHidePointListList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(hidePointListMemoizedSerializedSize);
      }
      for (int i = 0; i < hidePointList_.size(); i++) {
        output.writeUInt32NoTag(hidePointList_.getInt(i));
      }
      if (belongUid_ != 0) {
        output.writeUInt32(14, belongUid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < unlockedPointList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(unlockedPointList_.getInt(i));
        }
        size += dataSize;
        if (!getUnlockedPointListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        unlockedPointListMemoizedSerializedSize = dataSize;
      }
      if (sceneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sceneId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < kOPAHGHMECF_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(kOPAHGHMECF_.getInt(i));
        }
        size += dataSize;
        if (!getKOPAHGHMECFList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        kOPAHGHMECFMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < groupUnlimitPointList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(groupUnlimitPointList_.getInt(i));
        }
        size += dataSize;
        if (!getGroupUnlimitPointListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        groupUnlimitPointListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < unhidePointList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(unhidePointList_.getInt(i));
        }
        size += dataSize;
        if (!getUnhidePointListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        unhidePointListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < toBeExploredDungeonEntryList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(toBeExploredDungeonEntryList_.getInt(i));
        }
        size += dataSize;
        if (!getToBeExploredDungeonEntryListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        toBeExploredDungeonEntryListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < notInteractDungeonEntryList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(notInteractDungeonEntryList_.getInt(i));
        }
        size += dataSize;
        if (!getNotInteractDungeonEntryListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        notInteractDungeonEntryListMemoizedSerializedSize = dataSize;
      }
      if (fBFJPEPMAOF_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, fBFJPEPMAOF_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < notExploredDungeonEntryList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(notExploredDungeonEntryList_.getInt(i));
        }
        size += dataSize;
        if (!getNotExploredDungeonEntryListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        notExploredDungeonEntryListMemoizedSerializedSize = dataSize;
      }
      if (retcode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, retcode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < unlockAreaList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(unlockAreaList_.getInt(i));
        }
        size += dataSize;
        if (!getUnlockAreaListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        unlockAreaListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hidePointList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hidePointList_.getInt(i));
        }
        size += dataSize;
        if (!getHidePointListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        hidePointListMemoizedSerializedSize = dataSize;
      }
      if (belongUid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, belongUid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp other = (emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp) obj;

      if (!getUnlockedPointListList()
          .equals(other.getUnlockedPointListList())) return false;
      if (!getUnhidePointListList()
          .equals(other.getUnhidePointListList())) return false;
      if (getFBFJPEPMAOF()
          != other.getFBFJPEPMAOF()) return false;
      if (getRetcode()
          != other.getRetcode()) return false;
      if (!getUnlockAreaListList()
          .equals(other.getUnlockAreaListList())) return false;
      if (!getNotInteractDungeonEntryListList()
          .equals(other.getNotInteractDungeonEntryListList())) return false;
      if (!getNotExploredDungeonEntryListList()
          .equals(other.getNotExploredDungeonEntryListList())) return false;
      if (!getToBeExploredDungeonEntryListList()
          .equals(other.getToBeExploredDungeonEntryListList())) return false;
      if (!getGroupUnlimitPointListList()
          .equals(other.getGroupUnlimitPointListList())) return false;
      if (getBelongUid()
          != other.getBelongUid()) return false;
      if (!getHidePointListList()
          .equals(other.getHidePointListList())) return false;
      if (getSceneId()
          != other.getSceneId()) return false;
      if (!getKOPAHGHMECFList()
          .equals(other.getKOPAHGHMECFList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getUnlockedPointListCount() > 0) {
        hash = (37 * hash) + UNLOCKED_POINT_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getUnlockedPointListList().hashCode();
      }
      if (getUnhidePointListCount() > 0) {
        hash = (37 * hash) + UNHIDE_POINT_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getUnhidePointListList().hashCode();
      }
      hash = (37 * hash) + FBFJPEPMAOF_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFBFJPEPMAOF());
      hash = (37 * hash) + RETCODE_FIELD_NUMBER;
      hash = (53 * hash) + getRetcode();
      if (getUnlockAreaListCount() > 0) {
        hash = (37 * hash) + UNLOCK_AREA_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getUnlockAreaListList().hashCode();
      }
      if (getNotInteractDungeonEntryListCount() > 0) {
        hash = (37 * hash) + NOT_INTERACT_DUNGEON_ENTRY_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getNotInteractDungeonEntryListList().hashCode();
      }
      if (getNotExploredDungeonEntryListCount() > 0) {
        hash = (37 * hash) + NOT_EXPLORED_DUNGEON_ENTRY_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getNotExploredDungeonEntryListList().hashCode();
      }
      if (getToBeExploredDungeonEntryListCount() > 0) {
        hash = (37 * hash) + TO_BE_EXPLORED_DUNGEON_ENTRY_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getToBeExploredDungeonEntryListList().hashCode();
      }
      if (getGroupUnlimitPointListCount() > 0) {
        hash = (37 * hash) + GROUP_UNLIMIT_POINT_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getGroupUnlimitPointListList().hashCode();
      }
      hash = (37 * hash) + BELONG_UID_FIELD_NUMBER;
      hash = (53 * hash) + getBelongUid();
      if (getHidePointListCount() > 0) {
        hash = (37 * hash) + HIDE_POINT_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getHidePointListList().hashCode();
      }
      hash = (37 * hash) + SCENE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSceneId();
      if (getKOPAHGHMECFCount() > 0) {
        hash = (37 * hash) + KOPAHGHMECF_FIELD_NUMBER;
        hash = (53 * hash) + getKOPAHGHMECFList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CmdId: 7133
     * Obf: PMONCPENJMK
     * </pre>
     *
     * Protobuf type {@code GetScenePointRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetScenePointRsp)
        emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.GetScenePointRspOuterClass.internal_static_GetScenePointRsp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.GetScenePointRspOuterClass.internal_static_GetScenePointRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp.class, emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        unlockedPointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        unhidePointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        fBFJPEPMAOF_ = false;

        retcode_ = 0;

        unlockAreaList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        notInteractDungeonEntryList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        notExploredDungeonEntryList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        toBeExploredDungeonEntryList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        groupUnlimitPointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        belongUid_ = 0;

        hidePointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        sceneId_ = 0;

        kOPAHGHMECF_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.GetScenePointRspOuterClass.internal_static_GetScenePointRsp_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp build() {
        emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp buildPartial() {
        emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp result = new emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          unlockedPointList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.unlockedPointList_ = unlockedPointList_;
        if (((bitField0_ & 0x00000002) != 0)) {
          unhidePointList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.unhidePointList_ = unhidePointList_;
        result.fBFJPEPMAOF_ = fBFJPEPMAOF_;
        result.retcode_ = retcode_;
        if (((bitField0_ & 0x00000004) != 0)) {
          unlockAreaList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.unlockAreaList_ = unlockAreaList_;
        if (((bitField0_ & 0x00000008) != 0)) {
          notInteractDungeonEntryList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.notInteractDungeonEntryList_ = notInteractDungeonEntryList_;
        if (((bitField0_ & 0x00000010) != 0)) {
          notExploredDungeonEntryList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.notExploredDungeonEntryList_ = notExploredDungeonEntryList_;
        if (((bitField0_ & 0x00000020) != 0)) {
          toBeExploredDungeonEntryList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.toBeExploredDungeonEntryList_ = toBeExploredDungeonEntryList_;
        if (((bitField0_ & 0x00000040) != 0)) {
          groupUnlimitPointList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.groupUnlimitPointList_ = groupUnlimitPointList_;
        result.belongUid_ = belongUid_;
        if (((bitField0_ & 0x00000080) != 0)) {
          hidePointList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.hidePointList_ = hidePointList_;
        result.sceneId_ = sceneId_;
        if (((bitField0_ & 0x00000100) != 0)) {
          kOPAHGHMECF_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.kOPAHGHMECF_ = kOPAHGHMECF_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp) {
          return mergeFrom((emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp other) {
        if (other == emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp.getDefaultInstance()) return this;
        if (!other.unlockedPointList_.isEmpty()) {
          if (unlockedPointList_.isEmpty()) {
            unlockedPointList_ = other.unlockedPointList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUnlockedPointListIsMutable();
            unlockedPointList_.addAll(other.unlockedPointList_);
          }
          onChanged();
        }
        if (!other.unhidePointList_.isEmpty()) {
          if (unhidePointList_.isEmpty()) {
            unhidePointList_ = other.unhidePointList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUnhidePointListIsMutable();
            unhidePointList_.addAll(other.unhidePointList_);
          }
          onChanged();
        }
        if (other.getFBFJPEPMAOF() != false) {
          setFBFJPEPMAOF(other.getFBFJPEPMAOF());
        }
        if (other.getRetcode() != 0) {
          setRetcode(other.getRetcode());
        }
        if (!other.unlockAreaList_.isEmpty()) {
          if (unlockAreaList_.isEmpty()) {
            unlockAreaList_ = other.unlockAreaList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUnlockAreaListIsMutable();
            unlockAreaList_.addAll(other.unlockAreaList_);
          }
          onChanged();
        }
        if (!other.notInteractDungeonEntryList_.isEmpty()) {
          if (notInteractDungeonEntryList_.isEmpty()) {
            notInteractDungeonEntryList_ = other.notInteractDungeonEntryList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureNotInteractDungeonEntryListIsMutable();
            notInteractDungeonEntryList_.addAll(other.notInteractDungeonEntryList_);
          }
          onChanged();
        }
        if (!other.notExploredDungeonEntryList_.isEmpty()) {
          if (notExploredDungeonEntryList_.isEmpty()) {
            notExploredDungeonEntryList_ = other.notExploredDungeonEntryList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureNotExploredDungeonEntryListIsMutable();
            notExploredDungeonEntryList_.addAll(other.notExploredDungeonEntryList_);
          }
          onChanged();
        }
        if (!other.toBeExploredDungeonEntryList_.isEmpty()) {
          if (toBeExploredDungeonEntryList_.isEmpty()) {
            toBeExploredDungeonEntryList_ = other.toBeExploredDungeonEntryList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureToBeExploredDungeonEntryListIsMutable();
            toBeExploredDungeonEntryList_.addAll(other.toBeExploredDungeonEntryList_);
          }
          onChanged();
        }
        if (!other.groupUnlimitPointList_.isEmpty()) {
          if (groupUnlimitPointList_.isEmpty()) {
            groupUnlimitPointList_ = other.groupUnlimitPointList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureGroupUnlimitPointListIsMutable();
            groupUnlimitPointList_.addAll(other.groupUnlimitPointList_);
          }
          onChanged();
        }
        if (other.getBelongUid() != 0) {
          setBelongUid(other.getBelongUid());
        }
        if (!other.hidePointList_.isEmpty()) {
          if (hidePointList_.isEmpty()) {
            hidePointList_ = other.hidePointList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureHidePointListIsMutable();
            hidePointList_.addAll(other.hidePointList_);
          }
          onChanged();
        }
        if (other.getSceneId() != 0) {
          setSceneId(other.getSceneId());
        }
        if (!other.kOPAHGHMECF_.isEmpty()) {
          if (kOPAHGHMECF_.isEmpty()) {
            kOPAHGHMECF_ = other.kOPAHGHMECF_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureKOPAHGHMECFIsMutable();
            kOPAHGHMECF_.addAll(other.kOPAHGHMECF_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList unlockedPointList_ = emptyIntList();
      private void ensureUnlockedPointListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          unlockedPointList_ = mutableCopy(unlockedPointList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 unlocked_point_list = 1;</code>
       * @return A list containing the unlockedPointList.
       */
      public java.util.List<java.lang.Integer>
          getUnlockedPointListList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(unlockedPointList_) : unlockedPointList_;
      }
      /**
       * <code>repeated uint32 unlocked_point_list = 1;</code>
       * @return The count of unlockedPointList.
       */
      public int getUnlockedPointListCount() {
        return unlockedPointList_.size();
      }
      /**
       * <code>repeated uint32 unlocked_point_list = 1;</code>
       * @param index The index of the element to return.
       * @return The unlockedPointList at the given index.
       */
      public int getUnlockedPointList(int index) {
        return unlockedPointList_.getInt(index);
      }
      /**
       * <code>repeated uint32 unlocked_point_list = 1;</code>
       * @param index The index to set the value at.
       * @param value The unlockedPointList to set.
       * @return This builder for chaining.
       */
      public Builder setUnlockedPointList(
          int index, int value) {
        ensureUnlockedPointListIsMutable();
        unlockedPointList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unlocked_point_list = 1;</code>
       * @param value The unlockedPointList to add.
       * @return This builder for chaining.
       */
      public Builder addUnlockedPointList(int value) {
        ensureUnlockedPointListIsMutable();
        unlockedPointList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unlocked_point_list = 1;</code>
       * @param values The unlockedPointList to add.
       * @return This builder for chaining.
       */
      public Builder addAllUnlockedPointList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUnlockedPointListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unlockedPointList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unlocked_point_list = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnlockedPointList() {
        unlockedPointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList unhidePointList_ = emptyIntList();
      private void ensureUnhidePointListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          unhidePointList_ = mutableCopy(unhidePointList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 unhide_point_list = 6;</code>
       * @return A list containing the unhidePointList.
       */
      public java.util.List<java.lang.Integer>
          getUnhidePointListList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(unhidePointList_) : unhidePointList_;
      }
      /**
       * <code>repeated uint32 unhide_point_list = 6;</code>
       * @return The count of unhidePointList.
       */
      public int getUnhidePointListCount() {
        return unhidePointList_.size();
      }
      /**
       * <code>repeated uint32 unhide_point_list = 6;</code>
       * @param index The index of the element to return.
       * @return The unhidePointList at the given index.
       */
      public int getUnhidePointList(int index) {
        return unhidePointList_.getInt(index);
      }
      /**
       * <code>repeated uint32 unhide_point_list = 6;</code>
       * @param index The index to set the value at.
       * @param value The unhidePointList to set.
       * @return This builder for chaining.
       */
      public Builder setUnhidePointList(
          int index, int value) {
        ensureUnhidePointListIsMutable();
        unhidePointList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unhide_point_list = 6;</code>
       * @param value The unhidePointList to add.
       * @return This builder for chaining.
       */
      public Builder addUnhidePointList(int value) {
        ensureUnhidePointListIsMutable();
        unhidePointList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unhide_point_list = 6;</code>
       * @param values The unhidePointList to add.
       * @return This builder for chaining.
       */
      public Builder addAllUnhidePointList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUnhidePointListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unhidePointList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 unhide_point_list = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnhidePointList() {
        unhidePointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean fBFJPEPMAOF_ ;
      /**
       * <code>bool FBFJPEPMAOF = 9;</code>
       * @return The fBFJPEPMAOF.
       */
      @java.lang.Override
      public boolean getFBFJPEPMAOF() {
        return fBFJPEPMAOF_;
      }
      /**
       * <code>bool FBFJPEPMAOF = 9;</code>
       * @param value The fBFJPEPMAOF to set.
       * @return This builder for chaining.
       */
      public Builder setFBFJPEPMAOF(boolean value) {
        
        fBFJPEPMAOF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool FBFJPEPMAOF = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFBFJPEPMAOF() {
        
        fBFJPEPMAOF_ = false;
        onChanged();
        return this;
      }

      private int retcode_ ;
      /**
       * <code>int32 retcode = 11;</code>
       * @return The retcode.
       */
      @java.lang.Override
      public int getRetcode() {
        return retcode_;
      }
      /**
       * <code>int32 retcode = 11;</code>
       * @param value The retcode to set.
       * @return This builder for chaining.
       */
      public Builder setRetcode(int value) {
        
        retcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 retcode = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetcode() {
        
        retcode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList unlockAreaList_ = emptyIntList();
      private void ensureUnlockAreaListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          unlockAreaList_ = mutableCopy(unlockAreaList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *GILIFDOOHFF
       * </pre>
       *
       * <code>repeated uint32 unlock_area_list = 12;</code>
       * @return A list containing the unlockAreaList.
       */
      public java.util.List<java.lang.Integer>
          getUnlockAreaListList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(unlockAreaList_) : unlockAreaList_;
      }
      /**
       * <pre>
       *GILIFDOOHFF
       * </pre>
       *
       * <code>repeated uint32 unlock_area_list = 12;</code>
       * @return The count of unlockAreaList.
       */
      public int getUnlockAreaListCount() {
        return unlockAreaList_.size();
      }
      /**
       * <pre>
       *GILIFDOOHFF
       * </pre>
       *
       * <code>repeated uint32 unlock_area_list = 12;</code>
       * @param index The index of the element to return.
       * @return The unlockAreaList at the given index.
       */
      public int getUnlockAreaList(int index) {
        return unlockAreaList_.getInt(index);
      }
      /**
       * <pre>
       *GILIFDOOHFF
       * </pre>
       *
       * <code>repeated uint32 unlock_area_list = 12;</code>
       * @param index The index to set the value at.
       * @param value The unlockAreaList to set.
       * @return This builder for chaining.
       */
      public Builder setUnlockAreaList(
          int index, int value) {
        ensureUnlockAreaListIsMutable();
        unlockAreaList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *GILIFDOOHFF
       * </pre>
       *
       * <code>repeated uint32 unlock_area_list = 12;</code>
       * @param value The unlockAreaList to add.
       * @return This builder for chaining.
       */
      public Builder addUnlockAreaList(int value) {
        ensureUnlockAreaListIsMutable();
        unlockAreaList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *GILIFDOOHFF
       * </pre>
       *
       * <code>repeated uint32 unlock_area_list = 12;</code>
       * @param values The unlockAreaList to add.
       * @return This builder for chaining.
       */
      public Builder addAllUnlockAreaList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUnlockAreaListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unlockAreaList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *GILIFDOOHFF
       * </pre>
       *
       * <code>repeated uint32 unlock_area_list = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnlockAreaList() {
        unlockAreaList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList notInteractDungeonEntryList_ = emptyIntList();
      private void ensureNotInteractDungeonEntryListIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          notInteractDungeonEntryList_ = mutableCopy(notInteractDungeonEntryList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       *PPDDIADEDIC
       * </pre>
       *
       * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
       * @return A list containing the notInteractDungeonEntryList.
       */
      public java.util.List<java.lang.Integer>
          getNotInteractDungeonEntryListList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(notInteractDungeonEntryList_) : notInteractDungeonEntryList_;
      }
      /**
       * <pre>
       *PPDDIADEDIC
       * </pre>
       *
       * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
       * @return The count of notInteractDungeonEntryList.
       */
      public int getNotInteractDungeonEntryListCount() {
        return notInteractDungeonEntryList_.size();
      }
      /**
       * <pre>
       *PPDDIADEDIC
       * </pre>
       *
       * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
       * @param index The index of the element to return.
       * @return The notInteractDungeonEntryList at the given index.
       */
      public int getNotInteractDungeonEntryList(int index) {
        return notInteractDungeonEntryList_.getInt(index);
      }
      /**
       * <pre>
       *PPDDIADEDIC
       * </pre>
       *
       * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
       * @param index The index to set the value at.
       * @param value The notInteractDungeonEntryList to set.
       * @return This builder for chaining.
       */
      public Builder setNotInteractDungeonEntryList(
          int index, int value) {
        ensureNotInteractDungeonEntryListIsMutable();
        notInteractDungeonEntryList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *PPDDIADEDIC
       * </pre>
       *
       * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
       * @param value The notInteractDungeonEntryList to add.
       * @return This builder for chaining.
       */
      public Builder addNotInteractDungeonEntryList(int value) {
        ensureNotInteractDungeonEntryListIsMutable();
        notInteractDungeonEntryList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *PPDDIADEDIC
       * </pre>
       *
       * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
       * @param values The notInteractDungeonEntryList to add.
       * @return This builder for chaining.
       */
      public Builder addAllNotInteractDungeonEntryList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNotInteractDungeonEntryListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, notInteractDungeonEntryList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *PPDDIADEDIC
       * </pre>
       *
       * <code>repeated uint32 not_interact_dungeon_entry_list = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearNotInteractDungeonEntryList() {
        notInteractDungeonEntryList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList notExploredDungeonEntryList_ = emptyIntList();
      private void ensureNotExploredDungeonEntryListIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          notExploredDungeonEntryList_ = mutableCopy(notExploredDungeonEntryList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       *OGKCOCBLNLF
       * </pre>
       *
       * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
       * @return A list containing the notExploredDungeonEntryList.
       */
      public java.util.List<java.lang.Integer>
          getNotExploredDungeonEntryListList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(notExploredDungeonEntryList_) : notExploredDungeonEntryList_;
      }
      /**
       * <pre>
       *OGKCOCBLNLF
       * </pre>
       *
       * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
       * @return The count of notExploredDungeonEntryList.
       */
      public int getNotExploredDungeonEntryListCount() {
        return notExploredDungeonEntryList_.size();
      }
      /**
       * <pre>
       *OGKCOCBLNLF
       * </pre>
       *
       * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
       * @param index The index of the element to return.
       * @return The notExploredDungeonEntryList at the given index.
       */
      public int getNotExploredDungeonEntryList(int index) {
        return notExploredDungeonEntryList_.getInt(index);
      }
      /**
       * <pre>
       *OGKCOCBLNLF
       * </pre>
       *
       * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
       * @param index The index to set the value at.
       * @param value The notExploredDungeonEntryList to set.
       * @return This builder for chaining.
       */
      public Builder setNotExploredDungeonEntryList(
          int index, int value) {
        ensureNotExploredDungeonEntryListIsMutable();
        notExploredDungeonEntryList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *OGKCOCBLNLF
       * </pre>
       *
       * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
       * @param value The notExploredDungeonEntryList to add.
       * @return This builder for chaining.
       */
      public Builder addNotExploredDungeonEntryList(int value) {
        ensureNotExploredDungeonEntryListIsMutable();
        notExploredDungeonEntryList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *OGKCOCBLNLF
       * </pre>
       *
       * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
       * @param values The notExploredDungeonEntryList to add.
       * @return This builder for chaining.
       */
      public Builder addAllNotExploredDungeonEntryList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNotExploredDungeonEntryListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, notExploredDungeonEntryList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *OGKCOCBLNLF
       * </pre>
       *
       * <code>repeated uint32 not_explored_dungeon_entry_list = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearNotExploredDungeonEntryList() {
        notExploredDungeonEntryList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList toBeExploredDungeonEntryList_ = emptyIntList();
      private void ensureToBeExploredDungeonEntryListIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          toBeExploredDungeonEntryList_ = mutableCopy(toBeExploredDungeonEntryList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       *EBIFELCKPEA
       * </pre>
       *
       * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
       * @return A list containing the toBeExploredDungeonEntryList.
       */
      public java.util.List<java.lang.Integer>
          getToBeExploredDungeonEntryListList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(toBeExploredDungeonEntryList_) : toBeExploredDungeonEntryList_;
      }
      /**
       * <pre>
       *EBIFELCKPEA
       * </pre>
       *
       * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
       * @return The count of toBeExploredDungeonEntryList.
       */
      public int getToBeExploredDungeonEntryListCount() {
        return toBeExploredDungeonEntryList_.size();
      }
      /**
       * <pre>
       *EBIFELCKPEA
       * </pre>
       *
       * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
       * @param index The index of the element to return.
       * @return The toBeExploredDungeonEntryList at the given index.
       */
      public int getToBeExploredDungeonEntryList(int index) {
        return toBeExploredDungeonEntryList_.getInt(index);
      }
      /**
       * <pre>
       *EBIFELCKPEA
       * </pre>
       *
       * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
       * @param index The index to set the value at.
       * @param value The toBeExploredDungeonEntryList to set.
       * @return This builder for chaining.
       */
      public Builder setToBeExploredDungeonEntryList(
          int index, int value) {
        ensureToBeExploredDungeonEntryListIsMutable();
        toBeExploredDungeonEntryList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *EBIFELCKPEA
       * </pre>
       *
       * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
       * @param value The toBeExploredDungeonEntryList to add.
       * @return This builder for chaining.
       */
      public Builder addToBeExploredDungeonEntryList(int value) {
        ensureToBeExploredDungeonEntryListIsMutable();
        toBeExploredDungeonEntryList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *EBIFELCKPEA
       * </pre>
       *
       * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
       * @param values The toBeExploredDungeonEntryList to add.
       * @return This builder for chaining.
       */
      public Builder addAllToBeExploredDungeonEntryList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureToBeExploredDungeonEntryListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, toBeExploredDungeonEntryList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *EBIFELCKPEA
       * </pre>
       *
       * <code>repeated uint32 to_be_explored_dungeon_entry_list = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearToBeExploredDungeonEntryList() {
        toBeExploredDungeonEntryList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList groupUnlimitPointList_ = emptyIntList();
      private void ensureGroupUnlimitPointListIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          groupUnlimitPointList_ = mutableCopy(groupUnlimitPointList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       *JJOHJDFINFN
       * </pre>
       *
       * <code>repeated uint32 group_unlimit_point_list = 4;</code>
       * @return A list containing the groupUnlimitPointList.
       */
      public java.util.List<java.lang.Integer>
          getGroupUnlimitPointListList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(groupUnlimitPointList_) : groupUnlimitPointList_;
      }
      /**
       * <pre>
       *JJOHJDFINFN
       * </pre>
       *
       * <code>repeated uint32 group_unlimit_point_list = 4;</code>
       * @return The count of groupUnlimitPointList.
       */
      public int getGroupUnlimitPointListCount() {
        return groupUnlimitPointList_.size();
      }
      /**
       * <pre>
       *JJOHJDFINFN
       * </pre>
       *
       * <code>repeated uint32 group_unlimit_point_list = 4;</code>
       * @param index The index of the element to return.
       * @return The groupUnlimitPointList at the given index.
       */
      public int getGroupUnlimitPointList(int index) {
        return groupUnlimitPointList_.getInt(index);
      }
      /**
       * <pre>
       *JJOHJDFINFN
       * </pre>
       *
       * <code>repeated uint32 group_unlimit_point_list = 4;</code>
       * @param index The index to set the value at.
       * @param value The groupUnlimitPointList to set.
       * @return This builder for chaining.
       */
      public Builder setGroupUnlimitPointList(
          int index, int value) {
        ensureGroupUnlimitPointListIsMutable();
        groupUnlimitPointList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *JJOHJDFINFN
       * </pre>
       *
       * <code>repeated uint32 group_unlimit_point_list = 4;</code>
       * @param value The groupUnlimitPointList to add.
       * @return This builder for chaining.
       */
      public Builder addGroupUnlimitPointList(int value) {
        ensureGroupUnlimitPointListIsMutable();
        groupUnlimitPointList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *JJOHJDFINFN
       * </pre>
       *
       * <code>repeated uint32 group_unlimit_point_list = 4;</code>
       * @param values The groupUnlimitPointList to add.
       * @return This builder for chaining.
       */
      public Builder addAllGroupUnlimitPointList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGroupUnlimitPointListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, groupUnlimitPointList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *JJOHJDFINFN
       * </pre>
       *
       * <code>repeated uint32 group_unlimit_point_list = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupUnlimitPointList() {
        groupUnlimitPointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private int belongUid_ ;
      /**
       * <code>uint32 belong_uid = 14;</code>
       * @return The belongUid.
       */
      @java.lang.Override
      public int getBelongUid() {
        return belongUid_;
      }
      /**
       * <code>uint32 belong_uid = 14;</code>
       * @param value The belongUid to set.
       * @return This builder for chaining.
       */
      public Builder setBelongUid(int value) {
        
        belongUid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 belong_uid = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearBelongUid() {
        
        belongUid_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList hidePointList_ = emptyIntList();
      private void ensureHidePointListIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          hidePointList_ = mutableCopy(hidePointList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <pre>
       *JCLHNODLPOH correct
       * </pre>
       *
       * <code>repeated uint32 hide_point_list = 13;</code>
       * @return A list containing the hidePointList.
       */
      public java.util.List<java.lang.Integer>
          getHidePointListList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(hidePointList_) : hidePointList_;
      }
      /**
       * <pre>
       *JCLHNODLPOH correct
       * </pre>
       *
       * <code>repeated uint32 hide_point_list = 13;</code>
       * @return The count of hidePointList.
       */
      public int getHidePointListCount() {
        return hidePointList_.size();
      }
      /**
       * <pre>
       *JCLHNODLPOH correct
       * </pre>
       *
       * <code>repeated uint32 hide_point_list = 13;</code>
       * @param index The index of the element to return.
       * @return The hidePointList at the given index.
       */
      public int getHidePointList(int index) {
        return hidePointList_.getInt(index);
      }
      /**
       * <pre>
       *JCLHNODLPOH correct
       * </pre>
       *
       * <code>repeated uint32 hide_point_list = 13;</code>
       * @param index The index to set the value at.
       * @param value The hidePointList to set.
       * @return This builder for chaining.
       */
      public Builder setHidePointList(
          int index, int value) {
        ensureHidePointListIsMutable();
        hidePointList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *JCLHNODLPOH correct
       * </pre>
       *
       * <code>repeated uint32 hide_point_list = 13;</code>
       * @param value The hidePointList to add.
       * @return This builder for chaining.
       */
      public Builder addHidePointList(int value) {
        ensureHidePointListIsMutable();
        hidePointList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *JCLHNODLPOH correct
       * </pre>
       *
       * <code>repeated uint32 hide_point_list = 13;</code>
       * @param values The hidePointList to add.
       * @return This builder for chaining.
       */
      public Builder addAllHidePointList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHidePointListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hidePointList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *JCLHNODLPOH correct
       * </pre>
       *
       * <code>repeated uint32 hide_point_list = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearHidePointList() {
        hidePointList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private int sceneId_ ;
      /**
       * <code>uint32 scene_id = 2;</code>
       * @return The sceneId.
       */
      @java.lang.Override
      public int getSceneId() {
        return sceneId_;
      }
      /**
       * <code>uint32 scene_id = 2;</code>
       * @param value The sceneId to set.
       * @return This builder for chaining.
       */
      public Builder setSceneId(int value) {
        
        sceneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 scene_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSceneId() {
        
        sceneId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList kOPAHGHMECF_ = emptyIntList();
      private void ensureKOPAHGHMECFIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          kOPAHGHMECF_ = mutableCopy(kOPAHGHMECF_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       *KOPAHGHMECF
       * </pre>
       *
       * <code>repeated uint32 KOPAHGHMECF = 3;</code>
       * @return A list containing the kOPAHGHMECF.
       */
      public java.util.List<java.lang.Integer>
          getKOPAHGHMECFList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(kOPAHGHMECF_) : kOPAHGHMECF_;
      }
      /**
       * <pre>
       *KOPAHGHMECF
       * </pre>
       *
       * <code>repeated uint32 KOPAHGHMECF = 3;</code>
       * @return The count of kOPAHGHMECF.
       */
      public int getKOPAHGHMECFCount() {
        return kOPAHGHMECF_.size();
      }
      /**
       * <pre>
       *KOPAHGHMECF
       * </pre>
       *
       * <code>repeated uint32 KOPAHGHMECF = 3;</code>
       * @param index The index of the element to return.
       * @return The kOPAHGHMECF at the given index.
       */
      public int getKOPAHGHMECF(int index) {
        return kOPAHGHMECF_.getInt(index);
      }
      /**
       * <pre>
       *KOPAHGHMECF
       * </pre>
       *
       * <code>repeated uint32 KOPAHGHMECF = 3;</code>
       * @param index The index to set the value at.
       * @param value The kOPAHGHMECF to set.
       * @return This builder for chaining.
       */
      public Builder setKOPAHGHMECF(
          int index, int value) {
        ensureKOPAHGHMECFIsMutable();
        kOPAHGHMECF_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *KOPAHGHMECF
       * </pre>
       *
       * <code>repeated uint32 KOPAHGHMECF = 3;</code>
       * @param value The kOPAHGHMECF to add.
       * @return This builder for chaining.
       */
      public Builder addKOPAHGHMECF(int value) {
        ensureKOPAHGHMECFIsMutable();
        kOPAHGHMECF_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *KOPAHGHMECF
       * </pre>
       *
       * <code>repeated uint32 KOPAHGHMECF = 3;</code>
       * @param values The kOPAHGHMECF to add.
       * @return This builder for chaining.
       */
      public Builder addAllKOPAHGHMECF(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureKOPAHGHMECFIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, kOPAHGHMECF_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *KOPAHGHMECF
       * </pre>
       *
       * <code>repeated uint32 KOPAHGHMECF = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKOPAHGHMECF() {
        kOPAHGHMECF_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetScenePointRsp)
    }

    // @@protoc_insertion_point(class_scope:GetScenePointRsp)
    private static final emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp();
    }

    public static emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetScenePointRsp>
        PARSER = new com.google.protobuf.AbstractParser<GetScenePointRsp>() {
      @java.lang.Override
      public GetScenePointRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetScenePointRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetScenePointRsp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetScenePointRsp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.GetScenePointRspOuterClass.GetScenePointRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetScenePointRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetScenePointRsp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026GetScenePointRsp.proto\"\375\002\n\020GetScenePoi" +
      "ntRsp\022\033\n\023unlocked_point_list\030\001 \003(\r\022\031\n\021un" +
      "hide_point_list\030\006 \003(\r\022\023\n\013FBFJPEPMAOF\030\t \001" +
      "(\010\022\017\n\007retcode\030\013 \001(\005\022\030\n\020unlock_area_list\030" +
      "\014 \003(\r\022\'\n\037not_interact_dungeon_entry_list" +
      "\030\010 \003(\r\022\'\n\037not_explored_dungeon_entry_lis" +
      "t\030\n \003(\r\022)\n!to_be_explored_dungeon_entry_" +
      "list\030\007 \003(\r\022 \n\030group_unlimit_point_list\030\004" +
      " \003(\r\022\022\n\nbelong_uid\030\016 \001(\r\022\027\n\017hide_point_l" +
      "ist\030\r \003(\r\022\020\n\010scene_id\030\002 \001(\r\022\023\n\013KOPAHGHME" +
      "CF\030\003 \003(\rB\033\n\031emu.grasscutter.net.protob\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_GetScenePointRsp_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GetScenePointRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetScenePointRsp_descriptor,
        new java.lang.String[] { "UnlockedPointList", "UnhidePointList", "FBFJPEPMAOF", "Retcode", "UnlockAreaList", "NotInteractDungeonEntryList", "NotExploredDungeonEntryList", "ToBeExploredDungeonEntryList", "GroupUnlimitPointList", "BelongUid", "HidePointList", "SceneId", "KOPAHGHMECF", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
